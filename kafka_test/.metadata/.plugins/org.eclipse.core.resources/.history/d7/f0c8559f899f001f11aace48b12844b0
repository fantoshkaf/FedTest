package kafkaApp;




import org.apache.avro.generic.GenericRecord;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Service;

@Service
public class KafkaMessageProcessor {

    @Autowired
    private KafkaTemplate<String, String> kafkaTemplate;

    private static final String TARGET_TOPIC = "loadtopic"; // Целевой топик
    private static final String SOURCE_TOPIC = "test"; // Исходный топик
    private static final long DELAY_MS = 1; // Задержка в 500 мс

    @KafkaListener(topics = SOURCE_TOPIC, groupId = "test-group")
    public void listen(GenericRecord message) {
        // Преобразование сообщения из AVRO в строку
        String messageString = message.get("name").toString();  // Доступ к полю "name"

        System.out.println("Received message: " + messageString);

        try {
            // Добавляем задержку перед отправкой сообщения в целевой топик
            Thread.sleep(DELAY_MS);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt(); // Восстановление состояния прерывания потока
            System.err.println("Thread was interrupted: " + e.getMessage());
        }

        // Формируем новое сообщение с префиксом
        String transformedMessage = "Computer name - " + messageString;

        // Отправка сообщения в целевой топик
        kafkaTemplate.send(TARGET_TOPIC, transformedMessage);
        System.out.println("Sent message to target topic: " + transformedMessage);
    }
}