package kafkaApp;




import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Service;

@Service
public class KafkaMessageProcessor {

    @Autowired
    private KafkaTemplate<String, String> kafkaTemplate;

    private static final String TARGET_TOPIC = "loadtopic"; // Целевой топик
    private static final String SOURCE_TOPIC = "testt"; // Исходный топик
    private static final long DELAY_MS = 1; // Задержка в 500 мс

    private final AvroGenericRecordDeserializer avroDeserializer;

    @Autowired
    public KafkaMessageProcessor(AvroGenericRecordDeserializer avroDeserializer) {
        this.avroDeserializer = avroDeserializer;
        // Задайте схему, если она требуется (возможно, загрузка из файла или инициализация)
        Map<String, Object> config = new HashMap<>();
        avroDeserializer.configure(config, false);
    }

    @KafkaListener(topics = SOURCE_TOPIC, groupId = "test-group")
    public void listen(byte[] messageBytes) {
        System.out.println("Received raw message bytes");

        // Десериализация сообщения
        Object deserializedMessage = avroDeserializer.deserialize(SOURCE_TOPIC, messageBytes);

        // Обработка десериализованного сообщения (GenericRecord или список)
        if (deserializedMessage instanceof List) {
            List<?> records = (List<?>) deserializedMessage;
            for (Object record : records) {
                System.out.println("Deserialized record: " + record);
                // Добавьте задержку перед отправкой сообщения в целевой топик
                try {
                    Thread.sleep(DELAY_MS);
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                    System.err.println("Thread was interrupted: " + e.getMessage());
                }

                // Формируем новое сообщение с префиксом
                String transformedMessage = "Computer name - " + record.toString();

                // Отправка сообщения в целевой топик
                kafkaTemplate.send(TARGET_TOPIC, transformedMessage);
                System.out.println("Sent message to target topic: " + transformedMessage);
            }
        } else {
            System.err.println("Deserialization failed or unexpected data format");
        }
    }
}